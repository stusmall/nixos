# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  # Bootloader.
  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;

  networking.hostName = "nixos"; # Define your hostname.

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/af1c6485-22a5-49d6-9aa4-fdd51c06e75d";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-1f5300da-10e9-4730-b25b-9eed41ac33d3".device = "/dev/disk/by-uuid/1f5300da-10e9-4730-b25b-9eed41ac33d3";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/DC37-A158";
      fsType = "vfat";
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp7s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp6s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";

  #nixpkgs.hostPlatform = {
  # system = "x86_64-linux";
  # gcc.arch = "znver3";
  #};
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  # This gives the system the properties needed to rebuild all packages
  nix.settings.system-features = [ "big-parallel" "gccarch-znver3" ];
  # uncomment this to rebuild the system from source
  #  nixpkgs.localSystem = {
  #    gcc.arch = "znver3";
  #    gcc.tune = "znver3";
  #    system = "x86_64-linux";
  #  };

  nix.extraOptions = ''
      experimental-features = nix-command flakes
  '';
}
